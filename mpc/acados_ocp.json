{
    "acados_include_path": "/home/seoyeon/mpc_ws/acados/include",
    "acados_lib_path": "/home/seoyeon/mpc_ws/acados/lib",
    "code_export_directory": "/home/seoyeon/mpc_ws/MPC_RL/slalom_copy/mpc/c_generated_code",
    "constraints": {
        "C": [],
        "C_e": [],
        "D": [],
        "constr_type": "BGH",
        "constr_type_e": "BGH",
        "has_x0": true,
        "idxbu": [
            0
        ],
        "idxbx": [
            7
        ],
        "idxbx_0": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7
        ],
        "idxbx_e": [],
        "idxbxe_0": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7
        ],
        "idxsbu": [],
        "idxsbx": [
            0
        ],
        "idxsbx_e": [],
        "idxsg": [],
        "idxsg_e": [],
        "idxsh": [
            0
        ],
        "idxsh_e": [],
        "idxsphi": [],
        "idxsphi_e": [],
        "lbu": [
            -1.0
        ],
        "lbx": [
            0
        ],
        "lbx_0": [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "lbx_e": [],
        "lg": [],
        "lg_e": [],
        "lh": [
            -1
        ],
        "lh_e": [],
        "lphi": [],
        "lphi_e": [],
        "lsbu": [],
        "lsbx": [
            0.0
        ],
        "lsbx_e": [],
        "lsg": [],
        "lsg_e": [],
        "lsh": [
            0.0
        ],
        "lsh_e": [],
        "lsphi": [],
        "lsphi_e": [],
        "ubu": [
            1.0
        ],
        "ubx": [
            0
        ],
        "ubx_0": [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "ubx_e": [],
        "ug": [],
        "ug_e": [],
        "uh": [
            1
        ],
        "uh_e": [],
        "uphi": [],
        "uphi_e": [],
        "usbu": [],
        "usbx": [
            0.0
        ],
        "usbx_e": [],
        "usg": [],
        "usg_e": [],
        "ush": [
            0.0
        ],
        "ush_e": [],
        "usphi": [],
        "usphi_e": []
    },
    "cost": {
        "Vu": [],
        "Vu_0": [],
        "Vx": [],
        "Vx_0": [],
        "Vx_e": [],
        "Vz": [],
        "Vz_0": [],
        "W": [],
        "W_0": [],
        "W_e": [],
        "Zl": [
            1.0,
            1.0
        ],
        "Zl_e": [],
        "Zu": [
            1.0,
            1.0
        ],
        "Zu_e": [],
        "cost_ext_fun_type": "casadi",
        "cost_ext_fun_type_0": "casadi",
        "cost_ext_fun_type_e": "casadi",
        "cost_type": "EXTERNAL",
        "cost_type_0": "EXTERNAL",
        "cost_type_e": "EXTERNAL",
        "yref": [],
        "yref_0": [],
        "yref_e": [],
        "zl": [
            100.0,
            100.0
        ],
        "zl_e": [],
        "zu": [
            100.0,
            100.0
        ],
        "zu_e": []
    },
    "cython_include_dirs": [
        "/home/seoyeon/.pyenv/versions/mpc-env/lib/python3.7/site-packages/numpy/core/include",
        "/home/seoyeon/.pyenv/versions/3.7.17/include/python3.7m"
    ],
    "dims": {
        "N": 150,
        "nbu": 1,
        "nbx": 1,
        "nbx_0": 8,
        "nbx_e": 0,
        "nbxe_0": 8,
        "ng": 0,
        "ng_e": 0,
        "nh": 1,
        "nh_e": 0,
        "np": 6,
        "nphi": 0,
        "nphi_e": 0,
        "nr": 0,
        "nr_e": 0,
        "ns": 2,
        "ns_0": 1,
        "ns_e": 0,
        "nsbu": 0,
        "nsbx": 1,
        "nsbx_e": 0,
        "nsg": 0,
        "nsg_e": 0,
        "nsh": 1,
        "nsh_e": 0,
        "nsphi": 0,
        "nsphi_e": 0,
        "nu": 1,
        "nx": 8,
        "ny": 0,
        "ny_0": 0,
        "ny_e": 0,
        "nz": 0
    },
    "json_file": "/home/seoyeon/mpc_ws/MPC_RL/slalom_copy/mpc/acados_ocp.json",
    "model": {
        "con_h_expr": "@1=(bound_l_s(theta){0}-1.195), @2=(1.195+bound_l_s(theta){0}), ((ec-((@1+@2)/2))/((@1-@2)/2))",
        "con_h_expr_e": null,
        "con_phi_expr": null,
        "con_phi_expr_e": null,
        "con_r_expr": null,
        "con_r_expr_e": null,
        "con_r_in_phi": null,
        "con_r_in_phi_e": null,
        "cost_conl_custom_outer_hess": null,
        "cost_conl_custom_outer_hess_0": null,
        "cost_conl_custom_outer_hess_e": null,
        "cost_expr_ext_cost": "(((qc*sq((ec-ecref)))+((0.001*ddelta)*ddelta))+sq((ddelta-ddelta_before)))",
        "cost_expr_ext_cost_0": "(((qc*sq((ec-ecref)))+((0.001*ddelta)*ddelta))+sq((ddelta-ddelta_before)))",
        "cost_expr_ext_cost_custom_hess": null,
        "cost_expr_ext_cost_custom_hess_0": null,
        "cost_expr_ext_cost_custom_hess_e": null,
        "cost_expr_ext_cost_e": "((qc*sq((ec-ecref)))-(qtheta*(theta-thetaref)))",
        "cost_psi_expr": null,
        "cost_psi_expr_0": null,
        "cost_psi_expr_e": null,
        "cost_r_in_psi_expr": null,
        "cost_r_in_psi_expr_0": null,
        "cost_r_in_psi_expr_e": null,
        "cost_y_expr": null,
        "cost_y_expr_0": null,
        "cost_y_expr_e": null,
        "disc_dyn_expr": "@1=vertcat(theta, ec, epsi, vx, vy, omega, delta, D), @2=((D/0.36875)-73.457), @3=(delta*mapping(vx){0}), @4=fmax(vx,0.1), @5=(9032.92*sin((1.45027*atan((13.1632*(delta-atan2((vy+(0.985*omega)),@4))))))), @6=(9326.44*sin((1.44323*atan((15.0694*((delta*mapping(vx){0})-atan2((vy-(1.97*omega)),@4))))))), @7=(dt*vertcat(((vx*cos(epsi))-(vy*sin(epsi))), ((vx*sin(epsi))+(vy*cos(epsi))), omega, (((((@2*cos(@3))-(@5*sin(delta)))-(@6*sin(@3)))/2283.36)+(vy*omega)), (((((@5*cos(delta))+(@2*sin(@3)))+(@6*cos(@3)))/2283.36)-(vx*omega)), (((((0.985*@5)*cos(delta))-((1.97*@2)*sin(@3)))-((1.97*@6)*cos(@3)))/4650), ddelta, 0)), @8=(@1+((0.333333*@7)/2)), @9=@8[3], @10=@8[2], @11=@8[4], @12=@8[5], @13=((D/0.36875)-73.457), @14=(delta*mapping(@9){0}), @15=fmax(@9,0.1), @16=(9032.92*sin((1.45027*atan((13.1632*(delta-atan2((@11+(0.985*@12)),@15))))))), @17=(9326.44*sin((1.44323*atan((15.0694*((delta*mapping(@9){0})-atan2((@11-(1.97*@12)),@15))))))), @18=(dt*vertcat(((@9*cos(@10))-(@11*sin(@10))), ((@9*sin(@10))+(@11*cos(@10))), @12, (((((@13*cos(@14))-(@16*sin(delta)))-(@17*sin(@14)))/2283.36)+(@11*@12)), (((((@16*cos(delta))+(@13*sin(@14)))+(@17*cos(@14)))/2283.36)-(@9*@12)), (((((0.985*@16)*cos(delta))-((1.97*@13)*sin(@14)))-((1.97*@17)*cos(@14)))/4650), ddelta, 0)), @19=(@1+((0.333333*@18)/2)), @20=@19[3], @21=@19[2], @22=@19[4], @23=@19[5], @24=((D/0.36875)-73.457), @25=(delta*mapping(@20){0}), @26=fmax(@20,0.1), @27=(9032.92*sin((1.45027*atan((13.1632*(delta-atan2((@22+(0.985*@23)),@26))))))), @28=(9326.44*sin((1.44323*atan((15.0694*((delta*mapping(@20){0})-atan2((@22-(1.97*@23)),@26))))))), @29=(dt*vertcat(((@20*cos(@21))-(@22*sin(@21))), ((@20*sin(@21))+(@22*cos(@21))), @23, (((((@24*cos(@25))-(@27*sin(delta)))-(@28*sin(@25)))/2283.36)+(@22*@23)), (((((@27*cos(delta))+(@24*sin(@25)))+(@28*cos(@25)))/2283.36)-(@20*@23)), (((((0.985*@27)*cos(delta))-((1.97*@24)*sin(@25)))-((1.97*@28)*cos(@25)))/4650), ddelta, 0)), @30=(@1+(0.333333*@29)), @31=@30[3], @32=@30[2], @33=@30[4], @34=@30[5], @35=((D/0.36875)-73.457), @36=(delta*mapping(@31){0}), @37=fmax(@31,0.1), @38=(9032.92*sin((1.45027*atan((13.1632*(delta-atan2((@33+(0.985*@34)),@37))))))), @39=(9326.44*sin((1.44323*atan((15.0694*((delta*mapping(@31){0})-atan2((@33-(1.97*@34)),@37))))))), @40=(@1+((0.333333*(((@7+(2.*@18))+(2.*@29))+(dt*vertcat(((@31*cos(@32))-(@33*sin(@32))), ((@31*sin(@32))+(@33*cos(@32))), @34, (((((@35*cos(@36))-(@38*sin(delta)))-(@39*sin(@36)))/2283.36)+(@33*@34)), (((((@38*cos(delta))+(@35*sin(@36)))+(@39*cos(@36)))/2283.36)-(@31*@34)), (((((0.985*@38)*cos(delta))-((1.97*@35)*sin(@36)))-((1.97*@39)*cos(@36)))/4650), ddelta, 0))))/6)), @41=@40[3], @42=@40[2], @43=@40[4], @44=@40[5], @45=((D/0.36875)-73.457), @46=(delta*mapping(@41){0}), @47=fmax(@41,0.1), @48=(9032.92*sin((1.45027*atan((13.1632*(delta-atan2((@43+(0.985*@44)),@47))))))), @49=(9326.44*sin((1.44323*atan((15.0694*((delta*mapping(@41){0})-atan2((@43-(1.97*@44)),@47))))))), @50=(dt*vertcat(((@41*cos(@42))-(@43*sin(@42))), ((@41*sin(@42))+(@43*cos(@42))), @44, (((((@45*cos(@46))-(@48*sin(delta)))-(@49*sin(@46)))/2283.36)+(@43*@44)), (((((@48*cos(delta))+(@45*sin(@46)))+(@49*cos(@46)))/2283.36)-(@41*@44)), (((((0.985*@48)*cos(delta))-((1.97*@45)*sin(@46)))-((1.97*@49)*cos(@46)))/4650), ddelta, 0)), @51=(@40+((0.333333*@50)/2)), @52=@51[3], @53=@51[2], @54=@51[4], @55=@51[5], @56=((D/0.36875)-73.457), @57=(delta*mapping(@52){0}), @58=fmax(@52,0.1), @59=(9032.92*sin((1.45027*atan((13.1632*(delta-atan2((@54+(0.985*@55)),@58))))))), @60=(9326.44*sin((1.44323*atan((15.0694*((delta*mapping(@52){0})-atan2((@54-(1.97*@55)),@58))))))), @61=(dt*vertcat(((@52*cos(@53))-(@54*sin(@53))), ((@52*sin(@53))+(@54*cos(@53))), @55, (((((@56*cos(@57))-(@59*sin(delta)))-(@60*sin(@57)))/2283.36)+(@54*@55)), (((((@59*cos(delta))+(@56*sin(@57)))+(@60*cos(@57)))/2283.36)-(@52*@55)), (((((0.985*@59)*cos(delta))-((1.97*@56)*sin(@57)))-((1.97*@60)*cos(@57)))/4650), ddelta, 0)), @62=(@40+((0.333333*@61)/2)), @63=@62[3], @64=@62[2], @65=@62[4], @66=@62[5], @67=((D/0.36875)-73.457), @68=(delta*mapping(@63){0}), @69=fmax(@63,0.1), @70=(9032.92*sin((1.45027*atan((13.1632*(delta-atan2((@65+(0.985*@66)),@69))))))), @71=(9326.44*sin((1.44323*atan((15.0694*((delta*mapping(@63){0})-atan2((@65-(1.97*@66)),@69))))))), @72=(dt*vertcat(((@63*cos(@64))-(@65*sin(@64))), ((@63*sin(@64))+(@65*cos(@64))), @66, (((((@67*cos(@68))-(@70*sin(delta)))-(@71*sin(@68)))/2283.36)+(@65*@66)), (((((@70*cos(delta))+(@67*sin(@68)))+(@71*cos(@68)))/2283.36)-(@63*@66)), (((((0.985*@70)*cos(delta))-((1.97*@67)*sin(@68)))-((1.97*@71)*cos(@68)))/4650), ddelta, 0)), @73=(@40+(0.333333*@72)), @74=@73[3], @75=@73[2], @76=@73[4], @77=@73[5], @78=((D/0.36875)-73.457), @79=(delta*mapping(@74){0}), @80=fmax(@74,0.1), @81=(9032.92*sin((1.45027*atan((13.1632*(delta-atan2((@76+(0.985*@77)),@80))))))), @82=(9326.44*sin((1.44323*atan((15.0694*((delta*mapping(@74){0})-atan2((@76-(1.97*@77)),@80))))))), @83=(@40+((0.333333*(((@50+(2.*@61))+(2.*@72))+(dt*vertcat(((@74*cos(@75))-(@76*sin(@75))), ((@74*sin(@75))+(@76*cos(@75))), @77, (((((@78*cos(@79))-(@81*sin(delta)))-(@82*sin(@79)))/2283.36)+(@76*@77)), (((((@81*cos(delta))+(@78*sin(@79)))+(@82*cos(@79)))/2283.36)-(@74*@77)), (((((0.985*@81)*cos(delta))-((1.97*@78)*sin(@79)))-((1.97*@82)*cos(@79)))/4650), ddelta, 0))))/6)), @84=@83[3], @85=@83[2], @86=@83[4], @87=@83[5], @88=((D/0.36875)-73.457), @89=(delta*mapping(@84){0}), @90=fmax(@84,0.1), @91=(9032.92*sin((1.45027*atan((13.1632*(delta-atan2((@86+(0.985*@87)),@90))))))), @92=(9326.44*sin((1.44323*atan((15.0694*((delta*mapping(@84){0})-atan2((@86-(1.97*@87)),@90))))))), @93=(dt*vertcat(((@84*cos(@85))-(@86*sin(@85))), ((@84*sin(@85))+(@86*cos(@85))), @87, (((((@88*cos(@89))-(@91*sin(delta)))-(@92*sin(@89)))/2283.36)+(@86*@87)), (((((@91*cos(delta))+(@88*sin(@89)))+(@92*cos(@89)))/2283.36)-(@84*@87)), (((((0.985*@91)*cos(delta))-((1.97*@88)*sin(@89)))-((1.97*@92)*cos(@89)))/4650), ddelta, 0)), @94=(@83+((0.333333*@93)/2)), @95=@94[3], @96=@94[2], @97=@94[4], @98=@94[5], @99=((D/0.36875)-73.457), @100=(delta*mapping(@95){0}), @101=fmax(@95,0.1), @102=(9032.92*sin((1.45027*atan((13.1632*(delta-atan2((@97+(0.985*@98)),@101))))))), @103=(9326.44*sin((1.44323*atan((15.0694*((delta*mapping(@95){0})-atan2((@97-(1.97*@98)),@101))))))), @104=(dt*vertcat(((@95*cos(@96))-(@97*sin(@96))), ((@95*sin(@96))+(@97*cos(@96))), @98, (((((@99*cos(@100))-(@102*sin(delta)))-(@103*sin(@100)))/2283.36)+(@97*@98)), (((((@102*cos(delta))+(@99*sin(@100)))+(@103*cos(@100)))/2283.36)-(@95*@98)), (((((0.985*@102)*cos(delta))-((1.97*@99)*sin(@100)))-((1.97*@103)*cos(@100)))/4650), ddelta, 0)), @105=(@83+((0.333333*@104)/2)), @106=@105[3], @107=@105[2], @108=@105[4], @109=@105[5], @110=((D/0.36875)-73.457), @111=(delta*mapping(@106){0}), @112=fmax(@106,0.1), @113=(9032.92*sin((1.45027*atan((13.1632*(delta-atan2((@108+(0.985*@109)),@112))))))), @114=(9326.44*sin((1.44323*atan((15.0694*((delta*mapping(@106){0})-atan2((@108-(1.97*@109)),@112))))))), @115=(dt*vertcat(((@106*cos(@107))-(@108*sin(@107))), ((@106*sin(@107))+(@108*cos(@107))), @109, (((((@110*cos(@111))-(@113*sin(delta)))-(@114*sin(@111)))/2283.36)+(@108*@109)), (((((@113*cos(delta))+(@110*sin(@111)))+(@114*cos(@111)))/2283.36)-(@106*@109)), (((((0.985*@113)*cos(delta))-((1.97*@110)*sin(@111)))-((1.97*@114)*cos(@111)))/4650), ddelta, 0)), @116=(@83+(0.333333*@115)), @117=@116[3], @118=@116[2], @119=@116[4], @120=@116[5], @121=((D/0.36875)-73.457), @122=(delta*mapping(@117){0}), @123=fmax(@117,0.1), @124=(9032.92*sin((1.45027*atan((13.1632*(delta-atan2((@119+(0.985*@120)),@123))))))), @125=(9326.44*sin((1.44323*atan((15.0694*((delta*mapping(@117){0})-atan2((@119-(1.97*@120)),@123))))))), (@83+((0.333333*(((@93+(2.*@104))+(2.*@115))+(dt*vertcat(((@117*cos(@118))-(@119*sin(@118))), ((@117*sin(@118))+(@119*cos(@118))), @120, (((((@121*cos(@122))-(@124*sin(delta)))-(@125*sin(@122)))/2283.36)+(@119*@120)), (((((@124*cos(delta))+(@121*sin(@122)))+(@125*cos(@122)))/2283.36)-(@117*@120)), (((((0.985*@124)*cos(delta))-((1.97*@121)*sin(@122)))-((1.97*@125)*cos(@122)))/4650), ddelta, 0))))/6))",
        "dyn_disc_fun": null,
        "dyn_disc_fun_jac": null,
        "dyn_disc_fun_jac_hess": null,
        "dyn_ext_fun_type": "casadi",
        "dyn_generic_source": null,
        "f_expl_expr": "@1=((D/0.36875)-73.457), @2=(delta*mapping(vx){0}), @3=fmax(vx,0.1), @4=(9032.92*sin((1.45027*atan((13.1632*(delta-atan2((vy+(0.985*omega)),@3))))))), @5=(9326.44*sin((1.44323*atan((15.0694*((delta*mapping(vx){0})-atan2((vy-(1.97*omega)),@3))))))), (dt*vertcat(((vx*cos(epsi))-(vy*sin(epsi))), ((vx*sin(epsi))+(vy*cos(epsi))), omega, (((((@1*cos(@2))-(@4*sin(delta)))-(@5*sin(@2)))/2283.36)+(vy*omega)), (((((@4*cos(delta))+(@1*sin(@2)))+(@5*cos(@2)))/2283.36)-(vx*omega)), (((((0.985*@4)*cos(delta))-((1.97*@1)*sin(@2)))-((1.97*@5)*cos(@2)))/4650), ddelta, 0))",
        "f_impl_expr": "@1=((D/0.36875)-73.457), @2=(delta*mapping(vx){0}), @3=fmax(vx,0.1), @4=(9032.92*sin((1.45027*atan((13.1632*(delta-atan2((vy+(0.985*omega)),@3))))))), @5=(9326.44*sin((1.44323*atan((15.0694*((delta*mapping(vx){0})-atan2((vy-(1.97*omega)),@3))))))), (vertcat(thetadot, ecdot, epsidot, vxdot, vydot, omegadot, deltadot, Ddot)-(dt*vertcat(((vx*cos(epsi))-(vy*sin(epsi))), ((vx*sin(epsi))+(vy*cos(epsi))), omega, (((((@1*cos(@2))-(@4*sin(delta)))-(@5*sin(@2)))/2283.36)+(vy*omega)), (((((@4*cos(delta))+(@1*sin(@2)))+(@5*cos(@2)))/2283.36)-(vx*omega)), (((((0.985*@4)*cos(delta))-((1.97*@1)*sin(@2)))-((1.97*@5)*cos(@2)))/4650), ddelta, 0)))",
        "gnsf": {
            "nontrivial_f_LO": 1,
            "purely_linear": 0
        },
        "name": "Path_parametric_MPC",
        "p": "vertcat(ddelta_before, qtheta, thetaref, qc, ecref, dt)",
        "u": "ddelta",
        "x": "vertcat(theta, ec, epsi, vx, vy, omega, delta, D)",
        "xdot": "vertcat(thetadot, ecdot, epsidot, vxdot, vydot, omegadot, deltadot, Ddot)",
        "z": "0x0"
    },
    "parameter_values": [
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0
    ],
    "problem_class": "OCP",
    "shared_lib_ext": ".so",
    "solver_options": {
        "Tsim": 1.0,
        "alpha_min": 0.05,
        "alpha_reduction": 0.7,
        "collocation_type": "GAUSS_LEGENDRE",
        "cost_discretization": "EULER",
        "custom_templates": [],
        "custom_update_copy": true,
        "custom_update_filename": "",
        "custom_update_header_filename": "",
        "eps_sufficient_descent": 0.0001,
        "exact_hess_constr": 1,
        "exact_hess_cost": 1,
        "exact_hess_dyn": 1,
        "ext_cost_num_hess": 0,
        "ext_fun_compile_flags": "-O2",
        "full_step_dual": 0,
        "globalization": "FIXED_STEP",
        "globalization_use_SOC": 0,
        "hessian_approx": "GAUSS_NEWTON",
        "hpipm_mode": "BALANCE",
        "initialize_t_slacks": 0,
        "integrator_type": "ERK",
        "levenberg_marquardt": 0.0,
        "line_search_use_sufficient_descent": 0,
        "model_external_shared_lib_dir": null,
        "model_external_shared_lib_name": null,
        "nlp_solver_ext_qp_res": 0,
        "nlp_solver_max_iter": 200,
        "nlp_solver_step_length": 1.0,
        "nlp_solver_tol_comp": 0.0001,
        "nlp_solver_tol_eq": 0.0001,
        "nlp_solver_tol_ineq": 0.0001,
        "nlp_solver_tol_stat": 0.0001,
        "nlp_solver_type": "SQP_RTI",
        "print_level": 0,
        "qp_solver": "PARTIAL_CONDENSING_HPIPM",
        "qp_solver_cond_N": null,
        "qp_solver_cond_ric_alg": 1,
        "qp_solver_iter_max": 50,
        "qp_solver_ric_alg": 1,
        "qp_solver_tol_comp": null,
        "qp_solver_tol_eq": null,
        "qp_solver_tol_ineq": null,
        "qp_solver_tol_stat": null,
        "qp_solver_warm_start": 1,
        "regularize_method": null,
        "shooting_nodes": null,
        "sim_method_jac_reuse": [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
        ],
        "sim_method_newton_iter": 3,
        "sim_method_newton_tol": 0.0,
        "sim_method_num_stages": [
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4,
            4
        ],
        "sim_method_num_steps": [
            3,
            3,
            3,
            3,
            3,
            3,
            3,
            3,
            3,
            3,
            3,
            3,
            3,
            3,
            3,
            3,
            3,
            3,
            3,
            3,
            3,
            3,
            3,
            3,
            3,
            3,
            3,
            3,
            3,
            3,
            3,
            3,
            3,
            3,
            3,
            3,
            3,
            3,
            3,
            3,
            3,
            3,
            3,
            3,
            3,
            3,
            3,
            3,
            3,
            3,
            3,
            3,
            3,
            3,
            3,
            3,
            3,
            3,
            3,
            3,
            3,
            3,
            3,
            3,
            3,
            3,
            3,
            3,
            3,
            3,
            3,
            3,
            3,
            3,
            3,
            3,
            3,
            3,
            3,
            3,
            3,
            3,
            3,
            3,
            3,
            3,
            3,
            3,
            3,
            3,
            3,
            3,
            3,
            3,
            3,
            3,
            3,
            3,
            3,
            3,
            3,
            3,
            3,
            3,
            3,
            3,
            3,
            3,
            3,
            3,
            3,
            3,
            3,
            3,
            3,
            3,
            3,
            3,
            3,
            3,
            3,
            3,
            3,
            3,
            3,
            3,
            3,
            3,
            3,
            3,
            3,
            3,
            3,
            3,
            3,
            3,
            3,
            3,
            3,
            3,
            3,
            3,
            3,
            3,
            3,
            3,
            3,
            3,
            3,
            3
        ],
        "tf": 150,
        "time_steps": [
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0
        ]
    },
    "zoro_description": null
}